name: PhotoMaster Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  laravel-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: photomaster_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: mbstring, pdo_mysql, xml, zip, curl, gd

      - name: Install Laravel dependencies
        run: composer install --no-interaction --no-progress
        working-directory: ./laravel

      - name: Configure Laravel
        run: |
          cp .env.example .env
          php artisan key:generate
        working-directory: ./laravel
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306

      - name: Run Laravel tests
        run: php artisan test --exclude-group incomplete
        working-directory: ./laravel
        env:
          DB_DATABASE: photomaster_test
          DB_USERNAME: root
          DB_PASSWORD: password

  react-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies and run tests
        run: |
          rm -rf node_modules package-lock.json
          npm install --no-audit --no-fund
          npm run lint
          npm test
        working-directory: ./electron-react

  deploy:
    runs-on: ubuntu-latest
    needs: [laravel-test, react-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PEM_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H 13.39.161.145 >> ~/.ssh/known_hosts

      - name: Upload Deployment Scripts
        run: scp -i ~/.ssh/key.pem -o StrictHostKeyChecking=no -r deploy ubuntu@13.39.161.145:~/

      - name: Run Setup on Server
        run: |
          ssh -i ~/.ssh/key.pem ubuntu@13.39.161.145 "cd ~/deploy && ./setup.sh"
          ssh -i ~/.ssh/key.pem ubuntu@13.39.161.145 "cd ~/deploy && ./database.sh '${{ secrets.DB_ROOT_PASSWORD }}' '${{ secrets.DB_USERNAME }}' '${{ secrets.DB_PASSWORD }}'"
          ssh -i ~/.ssh/key.pem ubuntu@13.39.161.145 "cd ~/deploy && ./app.sh '${{ secrets.DB_USERNAME }}' '${{ secrets.DB_PASSWORD }}' 'https://github.com/${{ github.repository }}.git'"

      - name: Clean up
        if: always()
        run: |
          ssh -i ~/.ssh/key.pem ubuntu@13.39.161.145 "rm -rf ~/deploy"
          rm -f ~/.ssh/key.pem
