name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  laravel-tests:
    name: Laravel Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: photomaster_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, dom, fileinfo, mysql
          coverage: xdebug

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run PHP CS Fixer
        run: |
          composer require --dev friendsofphp/php-cs-fixer
          vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Run PHPStan
        run: |
          composer require --dev phpstan/phpstan
          vendor/bin/phpstan analyse

      - name: Execute tests via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: photomaster_test
          DB_USERNAME: user
          DB_PASSWORD: password
        run: vendor/bin/phpunit

  react-tests:
    name: React Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install Dependencies
        working-directory: ./electron-react
        run: npm ci

      - name: Run ESLint
        working-directory: ./electron-react
        run: npm run lint

      - name: Run Tests
        working-directory: ./electron-react
        run: npm test

  deploy-production:
    name: Deploy to Production
    needs: [laravel-tests, react-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /var/www/photomaster
            git fetch origin
            git checkout main
            git pull origin main

            # Laravel deployment
            cd laravel
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # React deployment
            cd ../electron-react
            npm ci
            npm run build

            # Clear caches and restart services
            sudo systemctl restart php8.1-fpm
            sudo systemctl restart nginx

            # Notify deployment status
            echo "Deployment completed successfully at $(date)"
