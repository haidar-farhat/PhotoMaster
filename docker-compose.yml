services:
  # Laravel Backend
  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./laravel/app:/var/www/html/app
      - ./laravel/bootstrap:/var/www/html/bootstrap
      - ./laravel/config:/var/www/html/config
      - ./laravel/database:/var/www/html/database
      - ./laravel/resources:/var/www/html/resources
      - ./laravel/routes:/var/www/html/routes
      - ./laravel/tests:/var/www/html/tests
      - ./laravel/.env:/var/www/html/.env
      - ./laravel/artisan:/var/www/html/artisan
      - ./laravel/composer.json:/var/www/html/composer.json
      - ./laravel/composer.lock:/var/www/html/composer.lock
      - ./laravel/storage:/var/www/html/storage
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - APP_ENV=local
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=photomaster
      - DB_USERNAME=root
      - DB_PASSWORD=root
    networks:
      - photomaster-network
    command: bash -c "
      php artisan config:clear && 
      php artisan cache:clear && 
      php artisan view:clear && 
      php artisan route:clear && 
      chmod -R 777 storage && 
      php artisan migrate --force && 
      php artisan storage:link && 
      php artisan serve --host=0.0.0.0"

  # MySQL Database
  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: photomaster
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      timeout: 5s
      retries: 10
    networks:
      - photomaster-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"  # Changed from 8080
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    depends_on:
      - mysql
    networks:
      - photomaster-network

  # React Frontend
  react:
    build:
      context: ./electron-react
    ports:
      - "3000:3000"
    volumes:
      - ./electron-react:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - laravel
    networks:
      - photomaster-network

  # New App Service
  app:
    build: .
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
    environment:
      - PHP_IMAGE_DRIVER=imagick
    networks:
      - photomaster-network

networks:
  photomaster-network:
    driver: bridge

volumes:
  mysql_data:
